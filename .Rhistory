fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = paste0(c("Sua nota foi melhor que ",round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == "18122687"],2)))) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = paste0(c("Sua nota foi melhor que ", round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2)))) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = paste(c("Sua nota foi melhor que ",
round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2)))) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
paste("sua nota", "0,58")
paste("sua nota", round(0.58888,2))
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = paste(c("Sua nota foi melhor que ",
round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2)))) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
texto_nota <- paste("Sua nota foi melhor que ", round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2))
texto_nota <- paste("Sua nota foi melhor que ",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2)))
texto_nota <- paste("Sua nota foi melhor que ",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],2)),
"dos participantes")
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == sample(PAS2019$Inscrição, 1)],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
incricao <- "18158654"
inscricao <- "18158654"
inscricao <- "18158654"
texto_nota <- paste("Sua nota foi melhor que ",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
inscricao <- sample(PAS2019$Inscrição, 1)
texto_nota <- paste("Sua nota foi melhor que ",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
inscricao <- sample(PAS2019$Inscrição, 1)
texto_nota <- paste("Sua nota foi melhor que ",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
shiny::runApp('PAS-2019')
runApp('PAS-2019')
runApp('PAS-2019')
runApp('PAS-2019')
inscricao <- reactive(as.integer(input$Inscrição))
inscricao <- reactive(input$Inscrição)
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
inscricao <- reactive(input$Inscrição)
inscricao <- input$Inscrição
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
inscricao <- reactive(input$Inscrição)
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
# geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
# geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
#           color = "red",
#           size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
input$Inscrição
inscricao <- reactive(as.integer(input$Inscrição))
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
"dos participantes")
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao()],2)),
"dos participantes")
inscricao <- reactive(as.integer(input$Inscrição))
inscricao <- input$Inscrição
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao()],2)),
"dos participantes")
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
inscricao <- reactive(as.integer(input$Inscrição))
texto_nota <- paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao()],2)),
"dos participantes")
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao()])
inscricao <- reactive(as.integer(input$Inscrição))
# texto_nota <- paste("Sua nota foi melhor que",
#                          scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
#                          "dos participantes")
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao()])
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == Inscrição()])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == input$Inscrição])
inscricao <- reactive(as.integer(input$Inscrição))
# texto_nota <- paste("Sua nota foi melhor que",
#                          scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
#                          "dos participantes")
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == input$Inscrição])
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao()$Inscrição])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao()])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[inscricao() == PAS2019$Inscrição])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[inscricao()])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[inscricao])
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao])
PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao]
subset(PAS2019, PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao])
subset(PAS2019, Inscrição == inscricao)
subset(PAS2019, Inscrição == inscricao())
subset(PAS2019, Inscrição == "18158654")
subset(PAS2019$EscoreBruto1, Inscrição == "18158654")
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == "18158654")
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == inscricao())
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == inscricao
)
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == quote(inscricao))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == quote(inscricao()))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == enquo(inscricao()))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == enquo(inscricao))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == quo(inscricao))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == quo(inscricao()))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == substitute(inscricao()))
subset(PAS2019$EscoreBruto1, PAS2019$Inscrição == substitute(inscricao))
subset(PAS2019$EscoreBruto2, PAS2019$Inscrição == substitute(inscricao))
inscricao <- reactive(as.integer(input$Inscrição))
sel <- PAS2019
# texto_nota <- paste("Sua nota foi melhor que",
#                          scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao],2)),
#                          "dos participantes")
texto_nota <- paste("Sua nota foi", PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao])
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_nota) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic()
})
selectInput("Inscrição", label = h3("Selecione o número de sua inscrição"),
choices = unique(PAS2019$Inscrição),
selected = 1)
inscricao <- input$Inscrição
inscricao <- input$Inscrição
?reactive
inscricao <- reactive(input$Inscrição, quoted = T)
selectInput("Inscrição", label = h3("Selecione o número de sua inscrição"),
choices = unique(PAS2019$Inscrição),
selected = 1)
inscricao <- reactive(as.integer(input$Inscrição, quoted = T))
inscricao <- reactive(as.integer(input$Inscrição))
inscricao <- list(reactive(as.integer(input$Inscrição)))
View(inscricao)
?renderText
inscricao <- renderText(reactive(as.integer(input$Inscrição)))
?observe
selectInput("Inscricao", label = h3("Selecione o número de sua inscrição"),
choices = unique(PAS2019$Inscrição),
selected = 1)
inscricao <- reactive({input$Inscricao})
texto_nota <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == inscricao()],2)),
"dos participantes"))
selectInput("Inscricao", label = h3("Selecione o número de sua inscrição"),
choices = unique(PAS2019$Inscrição),
selected = 1)
# inscricao <- reactive({input$Inscricao})
texto_nota <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
summary(PAS2019$EscoreBruto2)
texto_notaEB2 <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto2)(PAS2019$EscoreBruto2)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto2)) +
geom_histogram(bins = 10,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto2[PAS2019$Inscrição == input$Inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 2",
y = "Número de estudantes",
title = texto_notaEB2()) +
scale_x_continuous(breaks = c(seq(0:100, by = 10)),
position = "right") +
theme_classic()
})
texto_notaEB2 <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto2)(PAS2019$EscoreBruto2)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto2)) +
geom_histogram(bins = 10,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto2[PAS2019$Inscrição == input$Inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 2",
y = "Número de estudantes",
title = texto_notaEB2()) +
scale_x_continuous(breaks = c(seq(1:100, by = 10)),
position = "right") +
theme_classic()
})
texto_notaEB2 <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto2)(PAS2019$EscoreBruto2)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto2)) +
geom_histogram(bins = 10,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto2[PAS2019$Inscrição == input$Inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 2",
y = "Número de estudantes",
title = texto_notaEB2()) +
scale_x_continuous(breaks = c(seq(0:100, by = 1)),
position = "right") +
theme_classic()
})
texto_notaEB2 <- renderPrint(paste("Sua nota foi melhor que",
scales::percent(round(ecdf(PAS2019$EscoreBruto2)(PAS2019$EscoreBruto2)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto2)) +
geom_histogram(bins = 10,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto2[PAS2019$Inscrição == input$Inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 2",
y = "Número de estudantes",
title = texto_notaEB2()) +
scale_x_continuous(breaks = c(seq(0,100, by = 1)),
position = "right") +
theme_classic()
})
View(PAS2019)
texto_notaEB1 <- renderPrint(paste("Sua nota foi semelhante ou melhor do que a nota de",
scales::percent(round(ecdf(PAS2019$EscoreBruto1)(PAS2019$EscoreBruto1)[PAS2019$Inscrição == input$Inscricao],2)),
"dos participantes"))
renderPlot({
ggplot(data = PAS2019, aes(EscoreBruto1)) +
geom_histogram(binwidth = 1,
color = "royalblue",
fill = "lightblue",
boundary = 0) +
geom_vline(xintercept = PAS2019$EscoreBruto1[PAS2019$Inscrição == input$Inscricao],
color = "red",
size = 2) +
labs(x = "Escore Bruto 1",
y = "Número de estudantes",
title = texto_notaEB1()[1]) +
scale_x_continuous(breaks = c(seq(0:10)),
position = "right") +
theme_classic() +
theme(plot.title = element_text(size = 16))
})
load("O:/DAI/SIGRA/Extracao 04022019/Completo.RData")
t <- Completo %>% filter(`Ano Ingresso` <= 2018, `Ano Saida` >= 2018, `Nivel Curso` == "Graduacao") %>% distinct(RA)
t <- Completo %>% filter(`Ano Ingresso` <= 2018, `Ano Saida` >= 2018, `Nivel Curso` == "Graduacao", h20180 == 1 | h20181 == 1 | h20182 == 1) %>% distinct(RA)
t <- Completo %>% filter(`Ano Ingresso` <= 2018, `Ano Saida` >= 2018, `Nivel Curso` != "Graduacao") %>% group_by(`Nivel Curso`) %>% distinct(RA) %>% tally()
View(t)
t <- Completo %>% filter(`Ano Ingresso` <= 2018, `Ano Saida` >= 2018, `Nivel Curso` != "Graduacao", h20180 == 1 | h20181 == 1 | h20182 == 1) %>% group_by(`Nivel Curso`) %>% distinct(RA) %>% tally()
t <- Completo %>% filter(`Ano Ingresso` <= 2018, `Ano Saida` >= 2018, `Nivel Curso` != "Graduacao") %>% group_by(`Nivel Curso`) %>% distinct(RA) %>% tally()
rm(Completo)
install.packages(c("flexdashboard", "rio"))
install.packages("pdftools")
options(OutDec = ",")
texto <- pdf_text("Ed 8 PAS Subprograma 2018 1a etapa Res final tipo D e redação_revisada.pdf")
library(pdftools)
library(tidyverse)
texto <- pdf_text("Ed 8 PAS Subprograma 2018 1a etapa Res final tipo D e redação_revisada.pdf")
View(texto)
